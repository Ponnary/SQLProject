Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

Answer: 
SELECT COUNT(*) AS Total_Records
FROM attribute

+---------------+
| Total_Records |
+---------------+
|         10000 |
+---------------+

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review =  id: 10000, business_id: 8090, user_id: 9581
vi. Checkin = 493 
vii. Photo = id: 10000, photo: 6493
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

Answer: 

i). SELECT COUNT(DISTINCT id)
AS Total_Records 
FROM business
+---------------+
| Total_Records |
+---------------+
|         10000 |
+---------------+

ii). SELECT COUNT(DISTINCT business_id)
AS Total_Records 
FROM hours
+--------------+
| Total_Records |
+---------------+
|          3614 |
+---------------+

iii). SELECT COUNT(DISTINCT business_id)
AS Total_Records 
FROM Category
+---------------+
| Total_Records |
+---------------+
|          3355 |
+---------------+

iv). SELECT COUNT(DISTINCT Business_Id)
AS Total_Records 
FROM attribute
+---------------+
| Total_Records |
+---------------+
|          1115|
+---------------+

v). SELECT COUNT(DISTINCT id), COUNT(DISTINCT business_id), COUNT(DISTINCT user_id)
AS Total_Records 
FROM review
+--------------------+-----------------------------+---------------+
| COUNT(DISTINCT id) | COUNT(DISTINCT business_id) | Total_Records |
+--------------------+-----------------------------+---------------+
|              10000 |                        8090 |          9581 |
+--------------------+-----------------------------+---------------+

vi) SELECT COUNT(DISTINCT business_id) 
AS Total_Records
FROM checkin
+---------------+
| Total_Records |
+---------------+
|           493 |
+---------------+

vii) SELECT COUNT(DISTINCT business_id)
AS Total_Records
FROM photo
+---------------+
| Total_Records |
+---------------+
|          6493 |
+---------------+

viii) SELECT COUNT(DISTINCT user_id) , COUNT(DISTINCT business_id)
AS Total_Records
FROM tip
+-------------------------+---------------+
| COUNT(DISTINCT user_id) | Total_Records |
+-------------------------+---------------+
|                     537 |          3979 |
+-------------------------+---------------+

ix). SELECT COUNT(DISTINCT id)
AS Total_Records
FROM user
+---------------+
| Total_Records |
+---------------+
|         10000 |
+---------------+

x). SELECT COUNT(DISTINCT user_id)
AS Total_Records
FROM friend
+---------------+
| Total_Records |
+---------------+
|            11 |
+---------------+

xi). SELECT COUNT(DISTINCT user_id)
AS Total_Records
FROM elite_years
+---------------+
| Total_Records |
+---------------+
|          2780 |
+---------------+

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:No
	
SELECT COUNT(*)
FROM user
WHERE id IS NULL
OR name IS NULL
OR review_count IS NULL
OR yelping_since IS NULL
OR useful IS NULL
OR funny IS NULL
OR cool IS NULL
OR fans IS NULL
OR average_stars IS NULL
OR compliment_hot IS NULL
OR compliment_more IS NULL
OR compliment_profile IS NULL
OR compliment_cute IS NULL
OR compliment_list IS NULL
OR compliment_note IS NULL
OR compliment_plain IS NULL
OR compliment_cool IS NULL
OR compliment_funny IS NULL
OR compliment_writer IS NULL
OR compliment_photos IS NULL

4. 4. For each table and column listed below, display the smallest
(minimum), largest (maximum), and average (mean) value for the
following fields:

i. Table: Review, Column: Stars
min: 1 max: 5 avg: 3.7082

ii. Table: Business, Column: Stars
min: 1.0 max: 5.0 avg: 3.6549

iii. Table: Tip, Column: Likes
min: 0 max: 2 avg: 0.0144

iv. Table: Checkin, Column: Count
min: 1 max: 53 avg: 1.9414

v. Table: User, Column: Review_count
min: 0 max: 2000 avg: 24.2995

***SQL CODE 
SELECT MIN(Column),MAX(Column),AVG(Column)
FROM table

Example: SELECT MIN(Stars), MAX(Stars), AVG(Stars)
FROM Review

5. List the cities with the most reviews in descending order:

SELECT city, SUM(review_count) as total_review
FROM business
GROUP BY city
ORDER BY total_review desc;
+-----------------+--------------+
| city            | total_review |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montr√©al        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SELECT SUM(review_count) AS Numbers, stars
FROM business
WHERE city == "Avon"
GROUP BY stars

+---------+-------+
| Numbers | stars |
+---------+-------+
|      10 |   1.5 |
|       6 |   2.5 |
|      88 |   3.5 |
|      21 |   4.0 |
|      31 |   4.5 |
|       3 |   5.0 |
+---------+-------+

ii. Beachwood

SELECT SUM(review_count) AS Numbers, stars
FROM business
WHERE city == "Beachwood"
GROUP BY stars

+---------+-------+
| Numbers | stars |
+---------+-------+
|       8 |   2.0 |
|       3 |   2.5 |
|      11 |   3.0 |
|       6 |   3.5 |
|      69 |   4.0 |
|      17 |   4.5 |
|      23 |   5.0 |
+---------+-------+

7. Find the top 3 users based on their total number of reviews:

SELECT review_count, name AS Top_Users
FROM user
ORDER BY review_count DESC
LIMIT 3

+--------------+-----------+
| review_count | Top_Users |
+--------------+-----------+
|         2000 | Gerald    |
|         1629 | Sara      |
|         1339 | Yuri      |
+--------------+-----------+

8. Does posing more reviews correlate with more fans?

Posing more reviews is not necessarily correlate with more fans. 

SELECT name,review_count,fans
FROM user
ORDER BY fans DESC

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)

9. Are there more reviews with the word "love" or with the word "hate" in them?

ANSWER: There are more reviews with the word "love"

SELECT COUNT(*)
FROM review
WHERE text LIKE "%love%"
+----------+
| COUNT(*) |
+----------+
|     1780 |
+----------+

SELECT COUNT(*)
FROM review
WHERE text LIKE "%hate%"
+----------+
| COUNT(*) |
+----------+
|      232 |
+----------+

10. Find the top 10 users with the most fans:

SELECT name,fans
FROM user
ORDER BY fans DESC
LIMIT 10
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. 
Include your code.
i. Do the two groups you chose to analyze have a different distribution of hours?
ii. Do the two groups you chose to analyze have a different number of reviews?       
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SELECT
business.name
, business.city
, category.category
, business.stars
, hours.hours
, business.review_count
, business.postal_code
FROM (business INNER JOIN category ON business.id = category.business_id) INNER JOIN hours on hours.business_id = category.business_id
WHERE business.city = 'Las Vegas' AND category.category = 'Restaurants'
 GROUP BY business.stars;

+---------------------+-----------+-------------+-------+----------------------+--------------+-------------+
| name                | city      | category    | stars | hours                | review_count | postal_code |
+---------------------+-----------+-------------+-------+----------------------+--------------+-------------+
| Wingstop            | Las Vegas | Restaurants |   3.0 | Saturday|11:00-0:00  |          123 | 89103       |
| Big Wong Restaurant | Las Vegas | Restaurants |   4.0 | Saturday|10:00-23:00 |          768 | 89146       |
+---------------------+-----------+-------------+-------+----------------------+--------------+-------------+

***ANSWER: I am choosing between restaurants and city of Las Vegas where both have only 1 hour differences bewteen closed time.
They both have a different number of reviews. In this case, the distrubution of hours does not correlate to higher star rating. 
However, the number of reviews affect the counting of the rating star. The higher rate restaurant most likely have more options 
in food than Wingstop. The different food options might indicate more customers and more visits. 

		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
 The ones that are still open have more reviews on
average than ones that are closed

ii. Difference 2:
 There are more business that are still open listed as
‚Äúuseful‚Äù or ‚Äúfunny‚Äù.

+---------------------+-------------------+-------------------+---------------+---------+
| COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) | is_open |
+---------------------+-------------------+-------------------+---------------+---------+
|                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
|                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
+---------------------+-------------------+-------------------+---------------+---------+
SELECT COUNT(DISTINCT(id)), AVG(review_count), SUM(review_count), AVG(stars), is_open
FROM business
GROUP BY is_open  


